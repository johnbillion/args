# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: "Integrate"

on:
  push:
    branches:
      - "trunk"
  pull_request: null

jobs:
  byte_level:
    name: "0️⃣ Byte-level"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check file permissions"
        run: |
          test "$(find . -type f -not -path './.git/*' -executable)" == ""

      - name: "Find non-printable ASCII characters"
        run: |
          ! LC_ALL=C.UTF-8 find . -type f -name "*.php" -print0 | xargs -0 -- grep -PHn "[^\t -~]"

  syntax_errors:
    name: "1️⃣ Syntax errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.4"
          ini-file: "development"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Check source code for syntax errors"
        run: "composer exec -- parallel-lint src/ tests/ bin/"

  unit_tests:
    name: "2️⃣ Unit and functional tests"
    needs:
      - "byte_level"
      - "syntax_errors"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.4"
          - "8.0"
          - "8.1"
        dependencies:
          - "lowest"
          - "highest"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          ini-file: "development"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "Execute unit tests"
        run: "composer run test:phpunit"

#      - name: Send coverage to Coveralls
#        if: "matrix.php-version == '8.1' && matrix.dependencies == 'highest'"
#        env:
#          COVERALLS_REPO_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#        run: |
#          wget "https://github.com/php-coveralls/php-coveralls/releases/download/v2.5.2/php-coveralls.phar"
#          php ./php-coveralls.phar -v

  static_analysis:
    name: "3️⃣ Static Analysis"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1"
          ini-file: "development"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Validate Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Execute static analysis"
        run: "composer run test:phpstan"

  coding_standards:
    name: "4️⃣ Coding Standards"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1"
          ini-file: "development"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check adherence to EditorConfig"
        uses: "greut/eclint-action@v0"
        # FIXME https://github.com/greut/eclint/issues/1
        with:
          eclint_args: "-exclude {bin/generate.php,bin/shape.php}"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Check coding style"
        run: "composer run test:phpcs"

  generate_code:
    name: "4️⃣ Generate code"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "8.1"
          ini-file: "development"
          coverage: "none"

      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"

      - name: "Generate shape files"
        run: "composer run test:shapes"

      - name: "Check code changes compared to repository"
        run: "git diff --exit-code"

  exported_files:
    name: "5️⃣ Exported files"
    needs:
      - "byte_level"
      - "syntax_errors"
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Check exported files"
        run: |
          EXPECTED="LICENSE,README.md,composer.json"
          CURRENT="$(git archive HEAD | tar --list --exclude="src" --exclude="src/*" | paste -s -d ",")"
          echo "CURRENT =${CURRENT}"
          echo "EXPECTED=${EXPECTED}"
          test "${CURRENT}" == "${EXPECTED}"
